name: Documentation CI/CD

on:
  push:
    branches:
      - main
    tags:
      - '*/v*.*.*'  # Package version tags like dataorc-utils/v1.0.0
  pull_request:
    branches:
      - main

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Lint and validate documentation on PRs
  lint:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r docs/requirements.txt

      - name: Lint documentation
        run: |
          # Check if documentation builds without errors
          mkdocs build --strict
          echo "✅ Documentation builds successfully"
          
          # Check for common markdown issues
          echo "🔍 Checking for common markdown issues..."
          if find docs -name "*.md" -exec grep -l "TODO\|FIXME\|XXX" {} \; | head -5; then
            echo "⚠️  Found TODO/FIXME items in documentation"
          fi
          
          # Validate links (basic check)
          echo "🔗 Validating internal links..."
          mkdocs build --strict 2>&1 | grep -i "warning\|error" || echo "✅ No build warnings detected"

  # Build documentation for both PRs and main branch
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for version detection

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r docs/requirements.txt

      - name: Configure Git for mike (versioning)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Build documentation
        run: |
          # Build the main documentation
          mkdocs build

      - name: Setup Pages
        if: github.ref == 'refs/heads/main'
        uses: actions/configure-pages@v4

      - name: Upload artifact
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site

  # Deploy only on main branch
  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Add helpful PR comments
  pr-comment:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: [lint, build]
    steps:
      - name: Comment PR with preview info
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '📚 **Documentation Check Results**\n\n✅ Documentation builds successfully\n✅ No critical issues found\n\n📖 Documentation will be deployed to https://equinor.github.io/dataorc/ after this PR is merged to main.'
            })